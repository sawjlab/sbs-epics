Dependencies:

   -- asciidoc, http://www.methods.co.nz/asciidoc (package: asciidoc),
      to create documentation in different formats (man, pdf, html)
      NOTE: The distribution tar contains the doc in all available formats,
            so you don't need asciidoc to make and install procServ.

   -- libtelnet, http://github.com/elanthis/libtelnet (package: libtelnet)
      NOTE: The distribution tar contains the libtelnet sources, so it
            will be compiled into procServ automatically, if not found.


procServ is on Sourceforge:

   http://sourceforge.net/projects/procserv/

   Read-only access to the source code repository (Mercurial) is available at:

   http://procserv.hg.sourceforge.net:8000/hgroot/procserv/procserv

   For a wiki, and to create bug reports, feature or support requests,
   use procServ's Trac instance at:

   http://sourceforge.net/apps/trac/procserv/


procServ is part of official Linux distributions:

   Debian/Ubuntu -- apt-get install procserv
   Fedora/RHEL   -- yum install procServ

   The Mercurial repository contains the packaging extras, which are not part
   of the distribution tar.


Building within an EPICS build system

   Unpack procServ at the appropriate place within your EPICS structure.
   Inside that directory, run ./configure --with-epics-top=TOP
   where TOP is the relative path to the structure TOP.
   (For a structure created with epicsMakeBaseExt.pl, the appropriate place
   for the procServ subdir would be under TOP/src, with ../.. being the relative
   path to specify to configure - which is the default.)


Building from procServ Mercurial repository

   Requires autoconf >=2.61, automake >= 1.10

   Optional asciidoc >= 8.4, FOP >= 0.95, xsltproc >= 1.1.24

   $ hg clone http://procserv.hg.sourceforge.net:8000/hgroot/procserv/procserv
   $ cd procserv
   $ make
   $ ./configure --enable-doc
   $ make

   Note: When building from the repository you must explicitly
         use --enable-doc or --disable-doc.  Omitting this
         option assumes the distribution behaviour, that
         the documentation should be installed, but doesn't
         need to be built.


Using procServ to run EPICS soft IOCs in a production environment

   Michael Davidsaver (BNL) has created SysV-style rc scripts to configure
   and run EPICS soft IOCs using procServ.
   See http://epics.nsls2.bnl.gov/debian/ for the Debian package or
   http://epics.nsls2.bnl.gov/git/sysv-rc-softioc.git/ for the git repository.


Using procServ on Windows

   Under Windows, procServ compiles in a Cygwin environment. Configure with
   '--enable-access-from-anywhere' and run with '--allow' to allow remote access
   to the child console. The executable is available for download on SourceForge.

   To run on a non-Cygwin Windows system, procServ only needs Cygwin1.dll,
   e.g. in the same directory as the executable.

   Caveats:
   * Use Windows path delimiters '\' specifying the child executable, to avoid
     permission bit warnings/errors.
   * Under command.com, the caret sign '^' has to be escaped using '^^'.
   * Forking the daemon currently does not exit the foregroud process, resulting
     in an additional procServ process.
     This is a known issue and currently being investigated.


Enjoy!
